---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{required "A valid .Values.msName entry required!" .Values.msName | quote}}
spec:
  replicas: {{.Values.minReplicas}}
  template:
    metadata:
      {{if .Values.configMapName}}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{end}}
      labels:
        app: {{required "A valid .Values.msName entry required!" .Values.msName | quote}}
    spec:
      {{- if or (eq .Values.antiAffinity "hard") (eq .Values.antiAffinity "soft") .Values.nodeAffinity }}
      affinity:
      {{- end }}
      {{- if eq .Values.antiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{.Values.msName}}
            topologyKey: {{ .Values.antiAffinityTopologyKey }}
      {{- else if eq .Values.antiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: {{ .Values.antiAffinityTopologyKey }}
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{.Values.msName}}
      {{- end }}
      containers:
      - env:
        - name: NAME
          value: {{required "A valid .Values.msName entry required!" .Values.msName | quote}}
        - name: JAVA_OPTS_EXT
          value: {{.Values.javaOpts | quote}}
          {{if .Values.javaParameters}}
        - name: JAVA_PARAMETERS
          value: {{printf "%s --spring.profiles.active=%s" .Values.javaParameters .Values.environment}}
          {{else}}
        - name: JAVA_PARAMETERS
          value: {{printf "--spring.profiles.active=%s" .Values.environment}}
          {{end}}
        {{if (.Values.isConfigServer) and (.Values.netflix)}}
        - name: EUREKA_SERVER_URL
          value: http://eureka-server:8080
        {{else if .Values.netflix}}
        - name: CONFIG_SERVER
          value: {{.Values.configServer | quote}}
        {{end}}
        image: {{required "A valid .Values.dockerImage entry required!" .Values.dockerImage | quote}}
        {{if .Values.imagePullPolicy}}
        imagePullPolicy:  {{.Values.imagePullPolicy | quote}}
        {{else}}
        imagePullPolicy: IfNotPresent
        {{end}}
        name: {{required "A valid .Values.msName entry required!" .Values.msName | quote}}
        {{if .Values.imagePullPolicy}}
        imagePullPolicy: {{.Values.imagePullPolicy }}
        {{else}}
        imagePullPolicy: IfNotPresent
        {{end}}
        ports:
        - containerPort: {{.Values.containerPort}}
          protocol: TCP
        readinessProbe:
          httpGet:
            path: {{.Values.readinessPath}}
            port: {{.Values.containerPort}}
          initialDelaySeconds: {{.Values.readinessDelay}}
          timeoutSeconds: {{.Values.readinessTimeout}}
          periodSeconds: {{.Values.readinessPeriod}}
          successThreshold: {{.Values.readinessSuccess}}
          failureThreshold: {{.Values.readinessFailure}}
        livenessProbe:
          httpGet:
            port: {{.Values.containerPort}}
            path: {{.Values.livenessPath}}
          initialDelaySeconds: {{.Values.livenessDelay}}
          timeoutSeconds: {{.Values.livenessTimeout}}
          periodSeconds: {{.Values.livenessPeriod}}
          successThreshold: {{.Values.livenessSuccess}}
          failureThreshold: {{.Values.livenessFailure}}
        resources:
          requests:
            cpu: {{.Values.requestsCpu | quote}}
            memory: {{.Values.requestsMemory | quote}}
          limits:
            cpu: {{.Values.limitsCpu | quote}}
            memory: {{.Values.limitsMemory | quote}}
      {{if .Values.configMapName}}
        volumeMounts:
        - name: config
          mountPath: {{.Values.configMapPath}}{{.Values.configMapName}}
          readOnly: true
          subPath: {{.Values.configMapName}}
      volumes:
      - name: config
        configMap:
          defaultMode: 0644
          name: {{.Values.msName}}
      {{end}}
